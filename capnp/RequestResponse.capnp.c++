// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: RequestResponse.capnp

#include "RequestResponse.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<48> b_a76695c0941eb990 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    144, 185,  30, 148, 192, 149, 102, 167,
     22,   0,   0,   0,   1,   0,   0,   0,
    128, 150, 190,  59,   8, 205,  85, 171,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     82, 101, 113, 117, 101, 115, 116,  82,
    101, 115, 112, 111, 110, 115, 101,  46,
     99,  97, 112, 110, 112,  58,  72, 101,
     97, 100, 101, 114,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a76695c0941eb990 = b_a76695c0941eb990.words;
#if !CAPNP_LITE
static const uint16_t m_a76695c0941eb990[] = {0, 1};
static const uint16_t i_a76695c0941eb990[] = {0, 1};
const ::capnp::_::RawSchema s_a76695c0941eb990 = {
  0xa76695c0941eb990, b_a76695c0941eb990.words, 48, nullptr, m_a76695c0941eb990,
  0, 2, i_a76695c0941eb990, nullptr, nullptr, { &s_a76695c0941eb990, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<82> b_884cabbe200655fb = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    251,  85,   6,  32, 190, 171,  76, 136,
     22,   0,   0,   0,   1,   0,   0,   0,
    128, 150, 190,  59,   8, 205,  85, 171,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     82, 101, 113, 117, 101, 115, 116,  82,
    101, 115, 112, 111, 110, 115, 101,  46,
     99,  97, 112, 110, 112,  58,  82, 101,
    113, 117, 101, 115, 116,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    128,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
    118, 101, 114,  98,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 116, 104,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 101,  97, 100, 101, 114, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    144, 185,  30, 148, 192, 149, 102, 167,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 111, 100, 121,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_884cabbe200655fb = b_884cabbe200655fb.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_884cabbe200655fb[] = {
  &s_a76695c0941eb990,
};
static const uint16_t m_884cabbe200655fb[] = {3, 2, 1, 0};
static const uint16_t i_884cabbe200655fb[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_884cabbe200655fb = {
  0x884cabbe200655fb, b_884cabbe200655fb.words, 82, d_884cabbe200655fb, m_884cabbe200655fb,
  1, 4, i_884cabbe200655fb, nullptr, nullptr, { &s_884cabbe200655fb, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<68> b_ef8adb055243dc47 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     71, 220,  67,  82,   5, 219, 138, 239,
     22,   0,   0,   0,   1,   0,   1,   0,
    128, 150, 190,  59,   8, 205,  85, 171,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     82, 101, 113, 117, 101, 115, 116,  82,
    101, 115, 112, 111, 110, 115, 101,  46,
     99,  97, 112, 110, 112,  58,  82, 101,
    115, 112, 110, 111, 115, 101,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 116, 117, 115,  67, 111,
    100, 101,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 101,  97, 100, 101, 114, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    144, 185,  30, 148, 192, 149, 102, 167,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 111, 100, 121,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ef8adb055243dc47 = b_ef8adb055243dc47.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ef8adb055243dc47[] = {
  &s_a76695c0941eb990,
};
static const uint16_t m_ef8adb055243dc47[] = {2, 1, 0};
static const uint16_t i_ef8adb055243dc47[] = {0, 1, 2};
const ::capnp::_::RawSchema s_ef8adb055243dc47 = {
  0xef8adb055243dc47, b_ef8adb055243dc47.words, 68, d_ef8adb055243dc47, m_ef8adb055243dc47,
  1, 3, i_ef8adb055243dc47, nullptr, nullptr, { &s_ef8adb055243dc47, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace webserver {

// Header
#ifndef _MSC_VER
constexpr uint16_t Header::_capnpPrivate::dataWordSize;
constexpr uint16_t Header::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Header::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Header::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Header::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Request
#ifndef _MSC_VER
constexpr uint16_t Request::_capnpPrivate::dataWordSize;
constexpr uint16_t Request::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Request::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Request::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Request::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Respnose
#ifndef _MSC_VER
constexpr uint16_t Respnose::_capnpPrivate::dataWordSize;
constexpr uint16_t Respnose::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Respnose::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Respnose::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Respnose::_capnpPrivate::brand;
#endif  // !CAPNP_LITE


}  // namespace

